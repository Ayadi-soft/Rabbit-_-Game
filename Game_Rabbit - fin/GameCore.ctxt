#BlueJ class context
comment0.target=GameCore
comment0.text=\r\n\ @author\ David\ Cairns\r\n\ \r\n\ Core\ Game\ class\ that\ implements\ default\ game\ loop.\ Subclasses\ should\r\n\ implement\ the\ draw()\ method\ and\ override\ the\ update\ method.\r\n
comment1.params=
comment1.target=GameCore()
comment1.text=\r\n\ Default\ constructor\ for\ GameCore\r\n\r\n
comment10.params=
comment10.target=float\ getFPS()
comment10.text=\r\n\ @return\ The\ current\ frames\ per\ second\ (FPS)\r\n
comment11.params=e
comment11.target=void\ keyReleased(java.awt.event.KeyEvent)
comment11.text=\r\n\ Handles\ the\ keyReleased\ event\ to\ check\ for\ the\ 'Escape'\ key\ being\r\n\ pressed.\ If\ you\ override\ this\ method,\ make\ sure\ you\ enable\ the\ user\ \r\n\ to\ stop\ the\ game.\r\n
comment12.params=e
comment12.target=void\ keyPressed(java.awt.event.KeyEvent)
comment12.text=\r\n\ Handler\ for\ the\ keyPressed\ event\ (empty)\r\n
comment13.params=e
comment13.target=void\ keyTyped(java.awt.event.KeyEvent)
comment13.text=\r\n\ Handler\ for\ the\ keyTyped\ event\ (empty)\r\n
comment14.params=elapsedTime
comment14.target=void\ update(long)
comment14.text=\ \r\n\ Updates\ the\ state\ of\ the\ game/animation\ based\ on\ the\r\n\ amount\ of\ elapsed\ time\ that\ has\ passed.\ You\ should\r\n\ override\ this\ in\ your\ game\ class\ to\ do\ something\ useful.\r\n
comment15.params=g
comment15.target=void\ draw(java.awt.Graphics2D)
comment15.text=\ \r\n\ Subclasses\ must\ override\ this\ method\ to\ draw\ output\ to\r\n\ the\ screen\ via\ the\ Graphics2D\ object\ 'g'.\r\n\ \r\n\ @param\ g\ The\ Graphics2D\ object\ to\ draw\ with.\r\n
comment2.params=
comment2.target=void\ stop()
comment2.text=\ \r\n\ Signals\ the\ game\ loop\ that\ it's\ time\ to\ quit\ \r\n\ \r\n
comment3.params=full\ x\ y
comment3.target=void\ run(boolean,\ int,\ int)
comment3.text=\ \r\n\ Calls\ init()\ and\ gameLoop()\r\n\r\n\ @param\ full\ true\ to\ set\ to\ fullscreen\ mode,\ false\ otherwise\r\n
comment4.params=full\ xres\ yres
comment4.target=void\ init(boolean,\ int,\ int)
comment4.text=\ \r\n\ Sets\ full\ screen\ mode\ \ \r\n
comment5.params=show
comment5.target=void\ setVisible(boolean)
comment5.text=\r\n\ Shows\ and\ hides\ the\ main\ game\ window\r\n\ \r\n\ @param\ true\ to\ show\ the\ game\ window,\ false\ to\ hide\r\n\ \r\n
comment6.params=fileName
comment6.target=java.awt.Image\ loadImage(java.lang.String)
comment6.text=\r\n\ Loads\ an\ image\ with\ the\ given\ 'fileName'\r\n\ \r\n\ @param\ fileName\ The\ file\ path\ to\ the\ image\ file\ that\ should\ be\ loaded\ \r\n\ @return\ A\ reference\ to\ the\ Image\ object\ that\ was\ loaded\r\n
comment7.params=
comment7.target=void\ gameLoop()
comment7.text=\r\n\ \ Runs\ through\ the\ game\ loop\ until\ stop()\ is\ called.\ \r\n\ \ \r\n\ \ This\ method\ will\ call\ your\ update()\ method\ followed\ by\ your\ draw()\r\n\ \ method\ to\ display\ the\ updated\ game\ state.\ It\ implements\ double\ buffering\r\n\ \ for\ both\ full\ screen\ and\ windowed\ mode.\r\n
comment8.params=
comment8.target=int\ getWidth()
comment8.text=\r\n\ @return\ The\ screen\ width\ in\ pixels\r\n
comment9.params=
comment9.target=int\ getHeight()
comment9.text=\r\n\ @return\ The\ screen\ height\ in\ pixels\r\n
numComments=16

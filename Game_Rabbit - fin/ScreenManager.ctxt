#BlueJ class context
comment0.params=
comment0.target=ScreenManager()
comment0.text=\r\n\ \ \ \ \ \ \ \ Creates\ a\ new\ ScreenManager\ object.\r\n
comment1.params=
comment1.target=java.awt.DisplayMode[]\ getCompatibleDisplayModes()
comment1.text=\r\n\ \ \ \ \ \ \ \ Returns\ a\ list\ of\ compatible\ display\ modes\ for\ the\r\n\ \ \ \ \ \ \ \ default\ device\ on\ the\ system.\r\n
comment10.params=
comment10.target=int\ getWidth()
comment10.text=\r\n\ \ \ \ \ \ \ \ Returns\ the\ width\ of\ the\ window\ currently\ used\ in\ full\r\n\ \ \ \ \ \ \ \ screen\ mode.\ Returns\ 0\ if\ the\ device\ is\ not\ in\ full\r\n\ \ \ \ \ \ \ \ screen\ mode.\r\n
comment11.params=
comment11.target=int\ getHeight()
comment11.text=\r\n\ \ \ \ \ \ \ \ Returns\ the\ height\ of\ the\ window\ currently\ used\ in\ full\r\n\ \ \ \ \ \ \ \ screen\ mode.\ Returns\ 0\ if\ the\ device\ is\ not\ in\ full\r\n\ \ \ \ \ \ \ \ screen\ mode.\r\n
comment12.params=
comment12.target=void\ restoreScreen()
comment12.text=\r\n\ \ \ \ \ \ \ \ Restores\ the\ screen's\ display\ mode.\r\n
comment13.params=w\ h\ transparancy
comment13.target=java.awt.image.BufferedImage\ createCompatibleImage(int,\ int,\ int)
comment13.text=\r\n\ \ \ \ \ \ \ \ Creates\ an\ image\ compatible\ with\ the\ current\ display.\r\n
comment2.params=modes
comment2.target=java.awt.DisplayMode\ findFirstCompatibleMode(java.awt.DisplayMode[])
comment2.text=\r\n\ \ \ \ \ \ \ \ Returns\ the\ first\ compatible\ mode\ in\ a\ list\ of\ modes.\r\n\ \ \ \ \ \ \ \ Returns\ null\ if\ no\ modes\ are\ compatible.\r\n
comment3.params=
comment3.target=java.awt.DisplayMode\ getCurrentDisplayMode()
comment3.text=\r\n\ \ \ \ \ \ \ \ Returns\ the\ current\ display\ mode.\r\n
comment4.params=mode1\ mode2
comment4.target=boolean\ displayModesMatch(java.awt.DisplayMode,\ java.awt.DisplayMode)
comment4.text=\r\n\ \ \ \ \ \ \ \ Determines\ if\ two\ display\ modes\ "match".\ Two\ display\r\n\ \ \ \ \ \ \ \ modes\ match\ if\ they\ have\ the\ same\ resolution,\ bit\ depth,\r\n\ \ \ \ \ \ \ \ and\ refresh\ rate.\ The\ bit\ depth\ is\ ignored\ if\ one\ of\ the\r\n\ \ \ \ \ \ \ \ modes\ has\ a\ bit\ depth\ of\ DisplayMode.BIT_DEPTH_MULTI.\r\n\ \ \ \ \ \ \ \ Likewise,\ the\ refresh\ rate\ is\ ignored\ if\ one\ of\ the\r\n\ \ \ \ \ \ \ \ modes\ has\ a\ refresh\ rate\ of\r\n\ \ \ \ \ \ \ \ DisplayMode.REFRESH_RATE_UNKNOWN.\r\n
comment5.params=displayMode
comment5.target=void\ setFullScreen(java.awt.DisplayMode)
comment5.text=\r\n\ \ \ \ \ \ \ \ Enters\ full\ screen\ mode\ and\ changes\ the\ display\ mode.\r\n\ \ \ \ \ \ \ \ If\ the\ specified\ display\ mode\ is\ null\ or\ not\ compatible\r\n\ \ \ \ \ \ \ \ with\ this\ device,\ or\ if\ the\ display\ mode\ cannot\ be\r\n\ \ \ \ \ \ \ \ changed\ on\ this\ system,\ the\ current\ display\ mode\ is\ used.\r\n\ \ \ \ \ \ \ \ <p>\r\n\ \ \ \ \ \ \ \ The\ display\ uses\ a\ BufferStrategy\ with\ 2\ buffers.\r\n
comment6.params=
comment6.target=void\ run()
comment7.params=
comment7.target=java.awt.Graphics2D\ getGraphics()
comment7.text=\r\n\ \ \ \ \ \ \ \ Gets\ the\ graphics\ context\ for\ the\ display.\ The\r\n\ \ \ \ \ \ \ \ ScreenManager\ uses\ double\ buffering,\ so\ applications\ must\r\n\ \ \ \ \ \ \ \ call\ update()\ to\ show\ any\ graphics\ drawn.\r\n\ \ \ \ \ \ \ \ <p>\r\n\ \ \ \ \ \ \ \ The\ application\ must\ dispose\ of\ the\ graphics\ object.\r\n
comment8.params=
comment8.target=void\ update()
comment8.text=\r\n\ \ \ \ \ \ \ \ Updates\ the\ display.\r\n
comment9.params=
comment9.target=javax.swing.JFrame\ getFullScreenWindow()
comment9.text=\r\n\ \ \ \ \ \ \ \ Returns\ the\ window\ currently\ used\ in\ full\ screen\ mode.\r\n\ \ \ \ \ \ \ \ Returns\ null\ if\ the\ device\ is\ not\ in\ full\ screen\ mode.\r\n
numComments=14
